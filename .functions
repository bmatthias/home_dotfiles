less()
{
  local params=() param parsed
  for param in "$@"
  do
    case $param in
    (*:*)
      parsed=( ${param//:/ } )
      params+=( "-N" "+j${parsed[1]}" "${parsed[0]}" )
      ;;
    (*)
      params+=( "$param" )
      ;;
    esac
  done
  command less "${params[@]}"
}

get()
{
  local count=$1 url=${2:-} file=${3:-}
  if [[ -z "$count" ]]
  then
    echo "Usage: $0 [count] url [target]"
    return 1
  fi
  if [[ -z "$url" ]]
  then
    url="$count"
    count=4
  fi
  if [[ -z "$file" ]]
  then
    file="$(basename "$url")"
    file="${file%%&*}"
  fi
  echo "Save $url to $file in $count threads."
  aria2c -c -x $count -j $count -s $count $url -o $file
}

d()
{
  [[ -d $1 ]] || mkdir -p $1
  cd $1
}
gwm()
{
  git $@ wayne master
}
gwmpush()
{
  gwm pull $@ && git pull $@ && gwm push && git push
}
gcam()
{
  git add .
  git commit -m "$*"
}
gcm()
{
  git commit -m "$*"
}
show_git() {
  local limit path top
  limit=$(git config dir.limit 2>/dev/null)
  path="$PWD"
  top=$(git rev-parse --show-toplevel 2>/dev/null)
  [[ -z "$limit" ]] && return 0
  while (( limit >= 0 ))
  do
    case "$path" in
      ($top) return 0 ;;
      (/|$HOME) return 1 ;;
    esac
    path="$( dirname "$path" )"
    : $(( --limit ))
  done
  return 1
}
function pgd {
  show_git && echo -n $(
    git status 2>/dev/null | awk -v out=$1 -v std="dirty" '{ if ($0=="# Changes to be committed:") std = "uncommited"; last=$0 } \
      END{ if(last!="" && last!="nothing to commit (working directory clean)") { if(out!="") print out; else print std } }'
  )
}
function pgb {
  show_git && echo -n "$(git branch --no-color 2>/dev/null | awk -v out="$1"\
   '/^*/ { if(out=="") print $2; else print out}')" #'
}
function pgr {
  show_git && echo -n "$(git status 2>/dev/null | awk -v out="$1" '/# Your branch is / { if(out=="") print $5; else print out }')" #'
}
function _rvm_curr {
  local rvm=$(rvm current)
  [[ -n "${rvm}" ]] && printf "${rvm##ruby-} "
}
__setup_ssh_agent()
{
  # skip if already loaded
  if [[ -n "$SSH_AGENT_PID" ]] && ps -p $SSH_AGENT_PID | grep ssh-agent >/dev/null
  then return 0
  fi

  local agent_file
  agent_file=~/.ssh-agent-config

  if [[ -f $agent_file ]]
  then source $agent_file >/dev/null
  fi

  if [[ -n "$SSH_AGENT_PID" ]] && ps -p $SSH_AGENT_PID | grep ssh-agent >/dev/null
  then return 0
  fi

  ssh-agent > $agent_file
  source $agent_file >/dev/null

  if [[ -t 0 ]] && ! ssh-add -l | grep $HOME/.ssh/id_rsa >/dev/null
  then
    ssh-add
  fi
}
